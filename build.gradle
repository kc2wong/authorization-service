plugins {
    id "base"
    id "org.openapi.generator" version "6.0.1"
    id "org.liquibase.gradle" version "2.1.1"
}

repositories {
    mavenCentral()
}

dependencies {
    liquibaseRuntime "info.picocli:picocli:4.6.3"
    liquibaseRuntime "org.mongodb:mongodb-jdbc:2.0.0"
    liquibaseRuntime "org.liquibase.ext:liquibase-mongodb:4.14.0"
}

// Delete source generated by openapi generator and all __pycache__ directory in main source folder created by python
clean {
    delete "$projectDir/src/generated"
    delete fileTree("$projectDir/src") {
        include "git_push.sh", "Dockerfile", "README.md", "requirements.txt", "test-requirements.txt", "setup.py", "tox.ini"
    }
    def pycacheDir = fileTree("$projectDir/src/openapi_server").filter { it.parent.endsWith("__pycache__") }.files.parent
    delete pycacheDir
}

// Tell liquibase the connection info and location of change log file
liquibase {
  activities {
    main {
        File propsFile = new File("$projectDir/resources/dbchangelog/liquibase.properties")
        Properties properties = new Properties()
        properties.load(new FileInputStream(propsFile))

        url "${properties.url}"
        username "${properties.username}"
        password "${properties.password}"
        changelogFile "./resources/dbchangelog/db.changelog-root.xml"
    }
  }
}

// For openapi generator
openApiGenerate {
    generatorName = "python-flask"
    inputSpec = "$projectDir/resources/openapi/api-spec.yaml"
    outputDir = "$projectDir/src"
    templateDir = "$projectDir/resources/template"
    packageName = "generated.openapi_server"
    additionalProperties = [
        mainPackageName: "openapi_server"
    ]
}
